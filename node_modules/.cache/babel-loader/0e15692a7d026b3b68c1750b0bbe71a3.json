{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1, existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/alind/Downloads/Advance-Redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,WAAW,EAAE;AAHD,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAI,CAACQ,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADD;AAEfG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAJL;AAKfG,UAAAA,KAAK,EAAEX,OAAO,CAACW;AALA,SAAjB;AAOD,OARD,MAQM;AACJT,QAAAA,YAAY,CAACO,QAAb,GAAwBP,YAAY,CAACO,QAAb,GAAwB,CAAhD,EACAP,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BV,OAAO,CAACQ,KAD5D;AAGD;AACF,KAlBO;;AAmBRI,IAAAA,kBAAkB,CAACd,KAAD,EAAOC,MAAP,EAAc;AAC/B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACD,YAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,KAAIC,EAAhC,CAArB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACC,UAAGQ,YAAY,CAACO,QAAb,KAA0B,CAA7B,EAA+B;AACjCX,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CAAmBT,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAAd;AACG,OAFD,MAEK;AACFH,QAAAA,YAAY;AACZA,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACM,KAAjE;AACF;AACD;;AA7BO;AAPkB,CAAD,CAA7B;AAwCA,OAAO,MAAMM,WAAW,GAAGxB,SAAS,CAACyB,OAA9B;AACP,eAAezB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n  },\n  reducers: {\n    addItemCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title,\n        });\n      }else {\n        existingItem.quantity = existingItem.quantity + 1,\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n\n      }\n    },\n    removeItemFromCart(state,action){\n     const id = action.payload;\n    const existingItem = state.items.find(item=> item=== id);\n    state.totalQuantity--;\n     if(existingItem.quantity === 1){\n   state.items = state.items.filter(item=>item.id !== id);\n     }else{\n        existingItem--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n     }\n    }\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}